version: '3.8'
services:
  agent-web:
    build:
      context: .
      dockerfile: docker/Dockerfile.agents
    env_file:
      - agents/.env
    ports:
      - "5000:5000"
    depends_on:
      - neo4j
      - prometheus
      - grafana
      - neo4j-mcp
      - prometheus-mcp
    volumes:
      - ./agents:/app/agents

  neo4j:
    image: neo4j:5.19.0
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
    volumes:
      - neo4j-data:/data

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards

  neo4j-mcp:
    build:
      context: .
      dockerfile: docker/Dockerfile.mcp-servers
    command: ["python", "/app/mcp_servers/neo4j_server.py"]
    env_file:
      - agents/.env
    ports:
      - "8001:8001"
    depends_on:
      - neo4j
    volumes:
      - ./mcp_servers:/app/mcp_servers

  prometheus-mcp:
    build:
      context: .
      dockerfile: docker/Dockerfile.mcp-servers
    command: ["python", "/app/mcp_servers/prometheus_server.py"]
    env_file:
      - agents/.env
    ports:
      - "8000:8000"
    depends_on:
      - prometheus
    volumes:
      - ./mcp_servers:/app/mcp_servers

volumes:
  neo4j-data:
